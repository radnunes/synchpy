#!/home/user/synchpy/.venv/bin/python

from pathlib import Path  
import argparse  
import sys  

class Sync:
    def __init__(self, source_path: str, replica_path: str):
        """
        :param source_path: The path to the source directory.
        :param replica_path: The path to the replica directory.
        """
        self.source_path = Path(source_path).resolve()  
        self.replica_path = Path(replica_path).resolve()
        if not self.source_path.exists():
            raise FileNotFoundError(f"Source does not exist: {self.source_path}")
          
        self.replica_path.mkdir(parents=True, exist_ok=True)
          
    def sync(self):
        source_files = {} 
        for f in self.source_path.rglob("*"): 
            if f.is_file(): 
                relative_path = f.relative_to(self.source_path) 
                source_files[relative_path] = f 

        replica_files = {}
        for f in self.replica_path.rglob("*"):
            if f.is_file():
                relative_path = f.relative_to(self.replica_path)
                replica_files[relative_path] = f
                

        

def main():
    parser = argparse.ArgumentParser(description="Synchronize two directories.")  
    parser.add_argument('-s', '--source', default=Path.cwd(), help="Source folder path") 
    parser.add_argument('-r', '--replica', required=True, help="Replica folder path")  

    args = parser.parse_args() 

    try:
        sync = Sync(
            source_path=args.source,
            replica_path=args.replica
        )

        sync.sync() 
        
    except Exception as e:
        print(f"Error: {e}")
        sys.exit(1) 

if __name__ == "__main__":
    main() 
